# Generated by Django 2.1.3 on 2020-08-05 03:46

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_doc', models.CharField(choices=[('MAS', 'Mémoire de Master'), ('DOC', 'Thèse de Doctorat')], default='MAS', max_length=3, null=True)),
                ('titre_doc', models.CharField(max_length=50)),
                ('resume_doc', models.TextField(null=True)),
                ('date_selection', models.DateField(blank=True, null=True, verbose_name='Date de Selection')),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now, null=True, verbose_name='Date de Publication ')),
                ('est_soutenu', models.BooleanField(default=False)),
                ('date_soutenance', models.DateField(blank=True, null=True, verbose_name='Date de Soutenance')),
                ('note_soutenance', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('etablissement', models.CharField(choices=[('FSJP', 'Faculté des Sciences Juridiques et Politiques'), ('FSEG', 'Faculté des Sciences Economiques et de Gestion')], default='FSEG', max_length=6, null=True)),
                ('type_formation', models.CharField(choices=[('ACC', 'Formation Académique'), ('PRO', 'Formation professionnelle')], default='ACC', max_length=3, null=True)),
                ('filiere', models.CharField(max_length=20, null=True)),
                ('fichier', models.FileField(blank=True, null=True, upload_to='uploads/docs')),
            ],
            options={
                'ordering': ('-date_soutenance', 'titre_doc'),
            },
        ),
        migrations.CreateModel(
            name='Enseignant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre_enseignant', models.CharField(choices=[('ASS', 'Assistant'), ('CC', 'Chargé de cours'), ('MC', 'Maitre de Conférence'), ('PR', 'Professeur')], max_length=3)),
                ('role_enseignant', models.CharField(choices=[('JUR', 'Membre du Jury'), ('ENC', 'Encadreur')], max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='Etudiant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matricule', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Personne',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_complet', models.CharField(max_length=60)),
            ],
            options={
                'ordering': ('nom_complet',),
            },
        ),
        migrations.AddField(
            model_name='etudiant',
            name='etudiant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Personne'),
        ),
        migrations.AddField(
            model_name='enseignant',
            name='enseignant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Personne'),
        ),
        migrations.AddField(
            model_name='document',
            name='auteur',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Etudiant'),
        ),
        migrations.AddField(
            model_name='document',
            name='encadreur',
            field=models.ManyToManyField(related_name='encadreur', to='main.Enseignant'),
        ),
        migrations.AddField(
            model_name='document',
            name='jury',
            field=models.ManyToManyField(related_name='jury', to='main.Enseignant'),
        ),
    ]
