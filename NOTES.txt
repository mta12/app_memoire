
git init
git status
git add -A 
git commit -m "first commit"
git remote add origin https://github.com/mta12/app_memoire.git
git push -u origin master

pipenv lock 

heroku login 

heroku create # on peut ajouter le nom de l'appli
https://thawing-springs-89094.herokuapp.com/ | https://git.heroku.com/thawing-springs-89094.git

https://memoireapp3.herokuapp.com/ | https://git.heroku.com/memoireapp3.git

heroku git:remote -a thawing-springs-89094

#ignore static files 
heroku config:set DISABLE_COLLECTSTATIC=1

git push heroku master

# we need to make our Heroku app live
heroku ps:scale web=1

#confirmer 
heroku open

ça a marché. # premier déploiement réussit # git commit -m " premier déploiement réussit "

# second test 

# gestion des css 
pipenv install whitenoise==3.3.1
# dans installed apps 
'whitenoise.runserver_nostatic',  # new!
# dans middleware 
'whitenoise.middleware.WhiteNoiseMiddleware', # new!
# ajout de 
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles') # new!
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage' # new!

git add -A
(blog) $ git commit -m 'Heroku config'
(blog) $ git push origin master
heroku open
(blog) $ heroku git:remote -a memoireapp3
#ignore static files 

(blog) $ heroku config:set DISABLE_COLLECTSTATIC=1
blog) $ git push heroku master
(blog) $ heroku ps:scale web=1

# Il ya une erreur 
at=error code=H10 desc="App crashed" method=GET path="/search/?q=Manga" host=thawing-springs-89094.herokuapp.com 
request_id=e1c5fbe4-d2ca-4a17-82c3-676294f4ec57 fwd="41.204.93.74" dyno= connect= service= 
status=503 bytes= protocol=https
2020-08-05T08:57:02.946336+00:00 heroku[router]: at=error code=H10 desc="App crashed" 
method=GET path="/" host=thawing-springs-89094.herokuapp.com 
request_id=918f3e57-448a-4f99-8a30-e1088529ad03 fwd="41.204.93.74" 
dyno= connect= service= status=503 bytes= protocol=https

Sol1: pip install --upgrade whitenoise
- j'ai mis le dossier static dans la racine 
- j'ai créé le dossier staticfiles avec ./manage.py collectstatic 

1- Penser à réduire la taille des images au lancement
2- gérer les tailles d'écran

************* TAF sur les interfaces: responsive
sauvegardes: base copy et base_list copy 
-- Je suis sur l'entete; video 10.00

Les pbs à gérer pour le responsive: 
- pied de page 
- entete avec les menus 
- les différentes pages 

-- video: resp nav -- on doit gérer le clic sur les barres 19:14

-- voir comment faire la recherche sur le nom de l'auteur

***************** Nouveau déploiement 
- https://memoireapp3.herokuapp.com/

- pas bon l'affichage dans mon telephone
- il faut que le body remplisse linterface dans le phone 
- le clic ne marche pas dans mon telephone 
- gérer aussi le menu de droite 
- La pagination est innactive en mobile view -- OK

fontawesome: https://kit.fontawesome.com/a076d05399.js

********************** GERONS LA RECHERCHE AVANCEE 
- création du lien de recherche avancée (Home--OK, Index--Encours, Search--NOK)
    * creation de rech_avancee_home et index (ajout des ref dans urls.py)
    * création de la page rech avancee home (OK)
    * finission de la page rech index 
    * Etablissement des liens avec les pages 
    * gestion des requetes 
    * lancement de la vue 
- création de la page formulaire 
- création du formulaire 
- test de l'affichage correcte de la pge et du fonctionnement du lien 
- gestion des valeurs transmises par le formulaire avec une fonction view 
- test de la vue 
- On passe à la connexion des users. 

****************************GESTION DE LA CONNEXION 
## Dans la partie how-to de css il ya les pop-up forms qu'on peut utiliser. 
Mais apprenons d'abord les formulaires sur django avant de faire l'autre. 
Utilisons de préférence le doc de reférence (pour la formation) car il s'agit d'une opération importante. 
- Interface de connexion 
- Interface d'enregistrement 
